<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "http://colorer.sf.net/2003/hrc.dtd">
<hrc xmlns="http://colorer.sf.net/2003/hrc" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd" version="take5">
<!--
  insert this define into HRC base catalog file (colorer.hrc)

  <prototype name="wsf" group="group" description="wsf" targetNamespace="">
    <location link="wsf.hrc"/>
    <filename>/\./ix</filename>
  </prototype>
--><type name="wsf">
<annotation>
<documentation>
           XSLT Generated HRC scheme for language 'wsf'
           from XML Schema with xsd2hrc.xsl version 0.9.2
            (C) 2002-03 Cail Lomecb
            Portions copyright (C) 2004 Eugene Efremov

           Scheme parameters:
             targetNamespace             : 
             hrctype                     : wsf
             allow-common-attr           : yes
             allow-any-attr              : no
             allow-unknown-elements      : yes
             allow-unknown-root-elements : no
             force-single-root           : yes
             add-new-references          : 
             default prefixes            : (?{}(?{}wsf):)?

               you can change them with entity 'nsprefix'

         </documentation>
<documentation>
          Schema documentation:</documentation>
<contributors>Cail Lomecb, Max Belugin</contributors>
</annotation>
<import type="def"/>
<region parent="xml:element.defined.start.name" name="element.start.name"/>
<region parent="xml:element.defined.end.name" name="element.end.name"/>
<region parent="xml:element.start.lt" name="element.start.lt"/>
<region parent="xml:element.start.gt" name="element.start.gt"/>
<region parent="xml:element.end.lt" name="element.end.lt"/>
<region parent="xml:element.end.gt" name="element.end.gt"/>
<region parent="element.start.name" name="element.nsprefix"/>
<region parent="xml:element.nscolon" name="element.nscolon"/>
<region parent="xml:Attribute.defined.name" name="Attribute.name"/>
<region parent="xml:Attribute.nsprefix" name="Attribute.nsprefix"/>
<region parent="xml:AttValue.defined" name="AttValue"/>
<region parent="xml:AttValue.defined.start" name="AttValue.start"/>
<region parent="xml:AttValue.defined.end" name="AttValue.end"/>
<region description="Enumerated type values" parent="xml:Enumeration" name="Enumeration"/>
<entity value="(?{}(?{}wsf):)" name="ns-real-prefix"/>
<entity value="(?{}(?{}wsf):)?" name="nsprefix"/>
<scheme name="_hrc_int_elementContent">
<block scheme="xml:elementContent2" region19="element.start.gt" region18="element.end.gt" region17="element.end.name" region16="element.nscolon" region15="element.nsprefix" region12="element.end.lt" region11="PairEnd" region07="element.start.name" region06="element.nscolon" region05="element.nsprefix" region02="element.start.lt" region01="PairStart" end="/( (&lt;\/) (\y3\b)?= ( (%xml:NCName;) (:) )? (%xml:Name;) \b \M \s* (&gt;?)                   | (\/ \M &gt;) )/x" start="/~( (&lt;) (  ((%xml:NCName;) (:) )? (%xml:Name;) ) \M &gt;?   )/x"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_AttValue">
<block region="AttValue" scheme="xml:AttValue.content.quot" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(&quot;)/"/>
<block region="AttValue" scheme="xml:AttValue.content.apos" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(')/"/>
</scheme>
<scheme name="AttributeContent">
<inherit scheme="xml:AttributeContent">
<virtual subst-scheme="_hrc_int_AttValue" scheme="xml:AttValue"/>
</inherit>
</scheme>
<scheme name="jobType-content">
<inherit scheme="wsc:script-elements"/>
<inherit scheme="jobType-content-old"/>
</scheme>
<scheme name="scriptType-content">
<inherit scheme="wsc:scriptType-content"/>
</scheme>
<scheme name="scriptType-content-error">
<inherit scheme="scriptType-content"/>
</scheme>
<scheme name="description-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;description ([\s\/&gt;]|$) )/x" scheme="xmlschema:string-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="example-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;example ([\s\/&gt;]|$) )/x" scheme="xmlschema:string-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="package-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;package ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10021-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="job-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;job ([\s\/&gt;]|$) )/x" scheme="jobType-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="namedType-content">
<inherit scheme="xml:element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="namedType-content-error">
<inherit scheme="namedType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="namedType-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(helpstring)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(type)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(required)\M([\s\=]|$)/x" scheme="xmlschema:boolean-AttributeContent"/>
</scheme>
<scheme name="namedType-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="namedType-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="namedType-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: package
-->
<scheme name="_hrc_int_N10021-content">
<inherit scheme="job-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10021-content-error">
<inherit scheme="_hrc_int_N10021-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10021-Attributes"/>
<scheme name="_hrc_int_N10021-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10021-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10021-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="jobType-content-old">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;runtime ([\s\/&gt;]|$) )/x" scheme="runtimeType-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;script ([\s\/&gt;]|$) )/x" scheme="scriptType-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="jobType-content-error">
<inherit scheme="jobType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="jobType-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
</scheme>
<scheme name="jobType-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="jobType-content" scheme="xml:element"/>
<virtual subst-scheme="jobType-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="runtimeType-content">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;named ([\s\/&gt;]|$) )/x" scheme="namedType-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="description-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="example-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="runtimeType-content-error">
<inherit scheme="runtimeType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="runtimeType-Attributes"/>
<scheme name="runtimeType-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="runtimeType-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="runtimeType-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="scriptType-content-old">
<inherit scheme="xmlschema:string-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="scriptType-content-error-old">
<inherit scheme="scriptType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="scriptType-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(language)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
</scheme>
<scheme name="scriptType-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="scriptType-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="scriptType-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="scriptType-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>

<scheme name="wsf-root">
<annotation>
<documentation>
               You can replace these elements with needed single root element
               with customizing HRC generation process.
              </documentation>
</annotation>
<inherit scheme="description-element"/>
<inherit scheme="example-element"/>
<inherit scheme="package-element"/>
<inherit scheme="job-element"/>
</scheme>
<scheme name="wsf-root-addref">
<inherit scheme="wsf-root"/>
</scheme>
<scheme name="wsf">
<inherit scheme="xml:singleroot">
<virtual subst-scheme="wsf-root-addref" scheme="xml:element"/>
</inherit>
</scheme>
</type>
</hrc>
