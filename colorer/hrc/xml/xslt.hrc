<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "http://colorer.sf.net/2003/hrc.dtd">
<hrc xmlns="http://colorer.sf.net/2003/hrc" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd" version="take5">
<!--
  insert this define into HRC base catalog file (colorer.hrc)

  <prototype name="xslt" group="group" description="xslt" targetNamespace="http://www.w3.org/1999/XSL/Transform">
    <location link="xslt.hrc"/>
    <filename>/\./ix</filename>
  </prototype>
--><type name="xslt">
<annotation>
<documentation>
           XSLT Generated HRC scheme for language 'xslt'
           from XML Schema with xsd2hrc.xsl version 0.9.2
            (C) 2002-03 Cail Lomecb
            Portions copyright (C) 2004 Eugene Efremov

           Scheme parameters:
             targetNamespace             : http://www.w3.org/1999/XSL/Transform
             hrctype                     : xslt
             allow-common-attr           : yes
             allow-any-attr              : yes
             allow-unknown-elements      : no
             allow-unknown-root-elements : no
             force-single-root           : yes
             add-new-references          : 
             default prefixes            : (?{}(?{}xslt|xsl|xt|t):)?

               you can change them with entity 'nsprefix'

         </documentation>
<documentation>
          Schema documentation:
    This schema of the XSLT language was generated from xslt.dtd
    by dtd2xsd.pl (c) Mary Holstege, Yuichi Koike, Dan Connolly, Bert Bos bert@w3.org
    and adopted for using in colorer library as source for HRC syntax generation
    by Cail Lomecb (cail@nm.ru)
  </documentation>
<contributors>Cail Lomecb (c) 2002</contributors>
</annotation>
<import type="def"/>
<region parent="xml:element.defined.start.name" name="element.start.name"/>
<region parent="xml:element.defined.end.name" name="element.end.name"/>
<region parent="xml:element.start.lt" name="element.start.lt"/>
<region parent="xml:element.start.gt" name="element.start.gt"/>
<region parent="xml:element.end.lt" name="element.end.lt"/>
<region parent="xml:element.end.gt" name="element.end.gt"/>
<region parent="element.start.name" name="element.nsprefix"/>
<region parent="xml:element.nscolon" name="element.nscolon"/>
<region parent="xml:Attribute.defined.name" name="Attribute.name"/>
<region parent="xml:Attribute.nsprefix" name="Attribute.nsprefix"/>
<region parent="xml:AttValue.defined" name="AttValue"/>
<region parent="xml:AttValue.defined.start" name="AttValue.start"/>
<region parent="xml:AttValue.defined.end" name="AttValue.end"/>
<region description="Enumerated type values" parent="xml:Enumeration" name="Enumeration"/>
<region description="Stylesheet root" name="stylesheetOutlined" parent="def:Outlined"/>
<region description="Stylesheet Import" name="importOutlined" parent="def:Outlined"/>
<region description="Stylesheet Include" name="includeOutlined" parent="def:Outlined"/>
<region description="Template definition" name="templateOutlined" parent="def:Outlined"/>
<region description="Apply template construction" name="apply-templatesOutlined" parent="def:Outlined"/>
<entity value="(?{}(?{}xslt|xsl|xt|t):)" name="ns-real-prefix"/>
<entity value="(?{}(?{}xslt|xsl|xt|t):)?" name="nsprefix"/>
<scheme name="_hrc_int_elementContent">
<block scheme="xml:elementContent2" region19="element.start.gt" region18="element.end.gt" region17="element.end.name" region16="element.nscolon" region15="element.nsprefix" region12="element.end.lt" region11="PairEnd" region07="element.start.name" region06="element.nscolon" region05="element.nsprefix" region02="element.start.lt" region01="PairStart" end="/( (&lt;\/) (\y3\b)?= ( (%xml:NCName;) (:) )? (%xml:Name;) \b \M \s* (&gt;?)                   | (\/ \M &gt;) )/x" start="/~( (&lt;) (  ((%xml:NCName;) (:) )? (%xml:Name;) ) \M &gt;?   )/x"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_AttValue">
<block region="AttValue" scheme="xml:AttValue.content.quot" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(&quot;)/"/>
<block region="AttValue" scheme="xml:AttValue.content.apos" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(')/"/>
</scheme>
<scheme name="AttributeContent">
<inherit scheme="xml:AttributeContent">
<virtual subst-scheme="_hrc_int_AttValue" scheme="xml:AttValue"/>
</inherit>
</scheme>
<scheme name="result-element-group-content">
<inherit scheme="instructions-group"/>
<inherit scheme="xml:content"/>
</scheme>
<scheme name="result-element-group">
<inherit scheme="result-element-group-old">
<virtual scheme="xml:content" subst-scheme="result-element-group-content"/>
<virtual scheme="xml:AttValue.content.stream" subst-scheme="avt-content-error"/>
</inherit>
</scheme>
<region name="avt-content" parent="def:Insertion" description="Attribute Value template insertion"/>
<region name="expr-content" parent="def:default" description="Expression content"/>
<region name="expr-content-string" parent="def:StringEdge" description="String constant"/>
<region name="expr-content-variable" parent="def:StringContent" description="XSLT Variable"/>
<region name="expr-content-ops" parent="def:Operator" description="XSLT Operator"/>
<region name="expr-content-predicate" parent="def:Operator" description="Predicate"/>
<region name="expr-content-axis" parent="def:Keyword" description="XPath Axis"/>
<region name="expr-content-nodetype" parent="def:Keyword" description="Note type tests"/>
<region name="expr-content-function" parent="def:FunctionKeyword" description="Function call"/>
<region name="expr-content-nametest" parent="def:default" description="Name test"/>
<scheme name="pattern-content">
<block start="/\[/" end="/\]/" scheme="expr-content" region="expr-content-predicate" region00="PairStart" region10="PairEnd"/>
<keywords region="expr-content-ops" ignorecase="no">
<symb name="|"/>
<symb name="/"/>
<symb name="("/>
<symb name=")"/>
<symb name="'"/>
<symb name="'"/>
<symb name="&quot;"/>
<symb name="&quot;"/>
</keywords>
<keywords region="expr-content-axis">
<symb name="::"/>
<symb name="@"/>
<word name="attribute"/>
<word name="child"/>
</keywords>
<keywords region="expr-content-function">
<word name="id"/>
<word name="key"/>
</keywords>
<keywords region="expr-content-nodetype">
<word name="comment"/>
<word name="text"/>
<word name="processing-instruction"/>
<word name="node"/>
</keywords>
<regexp match="/\*|%xml:NCName;\:\*|%xml:QName;/" region="expr-content-nametest"/>
<inherit scheme="xml:Reference"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="avt-content-error">
<inherit scheme="avt-content"/>
</scheme>
<scheme name="avt-content">
<block start="/\{/" end="/\}/" scheme="expr-content" region="avt-content" region00="PairStart" region10="PairEnd"/>
</scheme>
<scheme name="expr-content-string-quot"/>
<scheme name="expr-content-string-apos"/>
<scheme name="expr-content">
<inherit scheme="def:Number"/>
<block start="/\(/" end="/\)/" scheme="expr-content" region="expr-content" region00="PairStart" region10="PairEnd"/>
<block start="/\[/" end="/\]/" scheme="expr-content" region="expr-content-predicate" region00="PairStart" region10="PairEnd"/>
<block start="/(\'|&amp;apos;)/" end="/(\'|&amp;apos;)/" scheme="expr-content-string-apos" priority="low" region="expr-content-string" region00="PairStart" region10="PairEnd"/>
<block start="/(\&quot;|&amp;quot;)/" end="/(\&quot;|&amp;quot;)/" scheme="expr-content-string-quot" priority="low" region="expr-content-string" region00="PairStart" region10="PairEnd"/>
<regexp match="/\$%xml:QName;/" region="expr-content-variable"/>
<keywords region="expr-content-ops" ignorecase="no">
<symb name=","/>
<symb name="="/>
<symb name="!="/>
<symb name="&lt;"/>
<symb name="&gt;"/>
<symb name="+"/>
<symb name="-"/>
<symb name="|"/>
<symb name="/"/>
<symb name="//"/>
<word name="or"/>
<word name="and"/>
<word name="div"/>
<word name="mod"/>
</keywords>
<keywords region="expr-content-axis">
<symb name="::"/>
<symb name="."/>
<symb name="@"/>
<word name="ancestor"/>
<word name="ancestor-or-self"/>
<word name="attribute"/>
<word name="child"/>
<word name="descendant"/>
<word name="descendant-or-self"/>
<word name="following"/>
<word name="following-sibling"/>
<word name="namespace"/>
<word name="parent"/>
<word name="preceding"/>
<word name="preceding-sibling"/>
<word name="self"/>
</keywords>
<keywords region="expr-content-nodetype">
<word name="comment"/>
<word name="text"/>
<word name="processing-instruction"/>
<word name="node"/>
</keywords>
<keywords region="expr-content-function">
<word name="last"/>
<word name="position"/>
<word name="count"/>
<word name="local-name"/>
<word name="namespace-uri"/>
<word name="name()"/>
<word name="id"/>
<word name="not"/>
<word name="boolean"/>
<word name="true"/>
<word name="false"/>
<word name="lang"/>
<word name="number"/>
<word name="sum"/>
<word name="floor"/>
<word name="ceiling"/>
<word name="round"/>
<word name="string"/>
<word name="starts-with"/>
<word name="contains"/>
<word name="string-length"/>
<word name="concat"/>
<word name="substring"/>
<word name="substring-before"/>
<word name="substring-after"/>
<word name="normalize-space"/>
<word name="translate"/>
<word name="document"/>
<word name="generate-id"/>
<word name="key"/>
<word name="format-number"/>
<word name="current"/>
<word name="unparsed-entity-uri"/>
<word name="system-property"/>
</keywords>
<regexp match="/\*|%xml:NCName;\:\*|%xml:QName;/" region="expr-content-nametest"/>
<inherit scheme="xml:Reference"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="char-content">
<regexp match="/\b[%xml:Char;]\b/" priority="low"/>
</scheme>
<scheme name="result-element-atts-attributeGroup">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(extension-element-prefixes)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent" xmlns="http://colorer.sf.net/2003/hrc"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(exclude-result-prefixes)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent" xmlns="http://colorer.sf.net/2003/hrc"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(use-attribute-sets)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKENS-AttributeContent" xmlns="http://colorer.sf.net/2003/hrc"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(version)\M([\s\=]|$)/x" scheme="xmlschema:decimal-AttributeContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="char-instructions-group">
<inherit scheme="apply-templates-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="call-template-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="apply-imports-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="for-each-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="value-of-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="copy-of-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="number-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="choose-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="if-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="text-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="copy-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="variable-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="message-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="fallback-element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="result-element-group-old">
<regexp region="def:Error" match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="instructions-group">
<inherit scheme="char-instructions-group" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="processing-instruction-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="comment-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="element-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="attribute-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="result-element-group" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="top-levelGroup-group">
<inherit scheme="include-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="strip-space-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="preserve-space-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="output-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="key-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="decimal-format-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="attribute-set-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="variable-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="param-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="template-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="namespace-alias-element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="stylesheet-element">
<regexp region1="stylesheetOutlined" match="/\M (&lt; %nsprefix;stylesheet \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x" xmlns="http://colorer.sf.net/2003/hrc"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;stylesheet ([\s\/&gt;]|$) )/x" scheme="top-level-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="transform-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;transform ([\s\/&gt;]|$) )/x" scheme="top-level-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="import-element">
<regexp region1="importOutlined" match="/\M (&lt; %nsprefix;import \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x" xmlns="http://colorer.sf.net/2003/hrc"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;import ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100DF-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="include-element">
<regexp region1="includeOutlined" match="/\M (&lt; %nsprefix;include \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x" xmlns="http://colorer.sf.net/2003/hrc"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;include ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100E6-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="strip-space-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;strip-space ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100ED-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="preserve-space-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;preserve-space ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100F6-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="output-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;output ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100FF-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="key-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;key ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10137-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="decimal-format-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;decimal-format ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10146-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="namespace-alias-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;namespace-alias ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10175-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="template-element">
<regexp region1="templateOutlined" match="/\M (&lt; %nsprefix;template \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x" xmlns="http://colorer.sf.net/2003/hrc"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;template ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10180-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="value-of-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;value-of ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1019D-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="copy-of-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;copy-of ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101A8-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="number-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;number ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101AF-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="apply-templates-element">
<regexp region1="apply-templatesOutlined" match="/\M (&lt; %nsprefix;apply-templates \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x" xmlns="http://colorer.sf.net/2003/hrc"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;apply-templates ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101DE-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="apply-imports-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;apply-imports ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101EE-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="for-each-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;for-each ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101F1-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="sort-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;sort ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10202-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="if-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;if ([\s\/&gt;]|$) )/x" scheme="if-when-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="choose-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;choose ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10226-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="when-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;when ([\s\/&gt;]|$) )/x" scheme="if-when-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="otherwise-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;otherwise ([\s\/&gt;]|$) )/x" scheme="templateType-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="attribute-set-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;attribute-set ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10237-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="call-template-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;call-template ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10247-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="with-param-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;with-param ([\s\/&gt;]|$) )/x" scheme="variable-param-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="variable-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;variable ([\s\/&gt;]|$) )/x" scheme="variable-param-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="param-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;param ([\s\/&gt;]|$) )/x" scheme="variable-param-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="text-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;text ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1025C-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="processing-instruction-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;processing-instruction ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10266-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="element-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;element ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10271-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="attribute-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;attribute ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10286-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="comment-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;comment ([\s\/&gt;]|$) )/x" scheme="char-template-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="copy-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;copy ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10298-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="message-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;message ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N102A5-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="fallback-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;fallback ([\s\/&gt;]|$) )/x" scheme="templateType-elementContent" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<!--
    This schema of the XSLT language was generated from xslt.dtd
    by dtd2xsd.pl (c) Mary Holstege, Yuichi Koike, Dan Connolly, Bert Bos bert@w3.org
    and adopted for using in colorer library as source for HRC syntax generation
    by Cail Lomecb (cail@nm.ru)
  
-->
<scheme name="pattern-content-old">
<inherit scheme="xmlschema:string-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="pattern-content-error">
<inherit scheme="pattern-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="pattern-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="pattern-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="pattern-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="pattern-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="pattern-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="pattern-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="pattern-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="avt-content-old">
<inherit scheme="xmlschema:string-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="avt-content-error-old">
<inherit scheme="avt-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="avt-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="avt-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="avt-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="avt-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="avt-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="avt-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="avt-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="expr-content-old">
<inherit scheme="xmlschema:string-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="expr-content-error">
<inherit scheme="expr-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="expr-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="expr-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="expr-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="expr-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="expr-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="expr-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="expr-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="char-content-old">
<inherit scheme="xmlschema:string-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="char-content-error">
<inherit scheme="char-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="char-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="char-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="char-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="char-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="char-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="char-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="char-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="yes-no-content">
<regexp region="Enumeration" match="/yes/" xmlns="http://colorer.sf.net/2003/hrc"/>
<regexp region="Enumeration" match="/no/" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="yes-no-content-error">
<inherit scheme="yes-no-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="yes-no-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="yes-no-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="yes-no-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="yes-no-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="yes-no-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="yes-no-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="yes-no-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="prefix-default-content">
<!--union:-->
<inherit scheme="xmlschema:NCName-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="_hrc_int_N10027-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="prefix-default-content-error">
<inherit scheme="prefix-default-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="prefix-default-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="prefix-default-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="prefix-default-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="prefix-default-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="prefix-default-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="prefix-default-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="prefix-default-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10027-content">
<regexp region="Enumeration" match="/#default/" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10027-content-error">
<inherit scheme="_hrc_int_N10027-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10027-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10027-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N10027-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="char-template-content">
<inherit scheme="char-instructions-group" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="char-template-content-error">
<inherit scheme="char-template-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="char-template-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="char-template-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="char-template-content" scheme="xml:element"/>
<virtual subst-scheme="char-template-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="templateType-content">
<inherit scheme="instructions-group" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="templateType-content-error">
<inherit scheme="templateType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="templateType-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="templateType-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="templateType-content" scheme="xml:element"/>
<virtual subst-scheme="templateType-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="top-level-content">
<inherit scheme="import-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="top-levelGroup-group" xmlns="http://colorer.sf.net/2003/hrc"/>
<regexp region="def:Error" match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="top-level-content-error">
<inherit scheme="top-level-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="top-level-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(extension-element-prefixes)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(exclude-result-prefixes)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:ID-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(version)\M([\s\=]|$)/x" scheme="xmlschema:decimal-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="top-level-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="top-level-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="top-level-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="variable-param-content">
<inherit scheme="templateType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="variable-param-content-error">
<inherit scheme="variable-param-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="variable-param-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(select)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<inherit scheme="templateType-Attributes"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="variable-param-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="variable-param-content" scheme="xml:element"/>
<virtual subst-scheme="variable-param-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="NameTest-content">
<!--union:-->
<inherit scheme="_hrc_int_N100CA-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="_hrc_int_N100CF-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="_hrc_int_N100D4-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="NameTest-content-error">
<inherit scheme="NameTest-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="NameTest-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="NameTest-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="NameTest-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="NameTest-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="NameTest-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="NameTest-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="NameTest-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100CA-content">
<regexp region="Enumeration" match="/\*/" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100CA-content-error">
<inherit scheme="_hrc_int_N100CA-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100CA-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100CA-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N100CA-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100CF-content">
<!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: \c\i+\:\*-->
<regexp priority="low" region="Enumeration" match="/[%xml:NCNameChar;][%xml:NCNameStartChar;]+\:\*/" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100CF-content-error">
<inherit scheme="_hrc_int_N100CF-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100CF-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100CF-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N100CF-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100D4-content">
<inherit scheme="xmlschema:QName-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100D4-content-error">
<inherit scheme="_hrc_int_N100D4-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100D4-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100D4-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N100D4-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: import
-->
<scheme name="_hrc_int_N100DF-content"/>
<scheme name="_hrc_int_N100DF-content-error">
<inherit scheme="_hrc_int_N100DF-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100DF-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(href)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100DF-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100DF-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100DF-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: include
-->
<scheme name="_hrc_int_N100E6-content"/>
<scheme name="_hrc_int_N100E6-content-error">
<inherit scheme="_hrc_int_N100E6-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100E6-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(href)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100E6-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100E6-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100E6-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: strip-space
-->
<scheme name="_hrc_int_N100ED-content"/>
<scheme name="_hrc_int_N100ED-content-error">
<inherit scheme="_hrc_int_N100ED-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100ED-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(elements)\M([\s\=]|$)/x" scheme="_hrc_int_N100F1-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100ED-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100ED-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100ED-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: elements
-->
<scheme name="_hrc_int_N100F1-content">
<!--list:-->
<inherit scheme="NameTest-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100F1-content-error">
<inherit scheme="_hrc_int_N100F1-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100F1-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100F1-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N100F1-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: preserve-space
-->
<scheme name="_hrc_int_N100F6-content"/>
<scheme name="_hrc_int_N100F6-content-error">
<inherit scheme="_hrc_int_N100F6-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100F6-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(elements)\M([\s\=]|$)/x" scheme="_hrc_int_N100FA-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100F6-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100F6-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100F6-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: elements
-->
<scheme name="_hrc_int_N100FA-content">
<!--list:-->
<inherit scheme="NameTest-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100FA-content-error">
<inherit scheme="_hrc_int_N100FA-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100FA-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100FA-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N100FA-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: output
-->
<scheme name="_hrc_int_N100FF-content"/>
<scheme name="_hrc_int_N100FF-content-error">
<inherit scheme="_hrc_int_N100FF-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N100FF-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(method)\M([\s\=]|$)/x" scheme="_hrc_int_N10103-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(version)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(encoding)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(omit-xml-declaration)\M([\s\=]|$)/x" scheme="yes-no-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(standalone)\M([\s\=]|$)/x" scheme="yes-no-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(doctype-public)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(doctype-system)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(cdata-section-elements)\M([\s\=]|$)/x" scheme="_hrc_int_N1012A-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(indent)\M([\s\=]|$)/x" scheme="yes-no-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(media-type)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100FF-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100FF-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100FF-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: method
-->
<scheme name="_hrc_int_N10103-content">
<!--union:-->
<inherit scheme="xmlschema:QName-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="_hrc_int_N10106-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10103-content-error">
<inherit scheme="_hrc_int_N10103-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10103-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10103-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N10103-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10106-content">
<regexp region="Enumeration" match="/xml/" xmlns="http://colorer.sf.net/2003/hrc"/>
<regexp region="Enumeration" match="/html/" xmlns="http://colorer.sf.net/2003/hrc"/>
<regexp region="Enumeration" match="/text/" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10106-content-error">
<inherit scheme="_hrc_int_N10106-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10106-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10106-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N10106-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: cdata-section-elements
-->
<scheme name="_hrc_int_N1012A-content">
<!--list:-->
<inherit scheme="xmlschema:QName-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N1012A-content-error">
<inherit scheme="_hrc_int_N1012A-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N1012A-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1012A-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N1012A-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: key
-->
<scheme name="_hrc_int_N10137-content"/>
<scheme name="_hrc_int_N10137-content-error">
<inherit scheme="_hrc_int_N10137-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10137-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(match)\M([\s\=]|$)/x" scheme="pattern-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(use)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10137-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10137-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10137-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: decimal-format
-->
<scheme name="_hrc_int_N10146-content"/>
<scheme name="_hrc_int_N10146-content-error">
<inherit scheme="_hrc_int_N10146-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10146-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(decimal-separator)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(grouping-separator)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(infinity)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(minus-sign)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(NaN)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(percent)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(per-mille)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(zero-digit)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(digit)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(pattern-separator)\M([\s\=]|$)/x" scheme="char-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10146-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10146-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10146-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: namespace-alias
-->
<scheme name="_hrc_int_N10175-content"/>
<scheme name="_hrc_int_N10175-content-error">
<inherit scheme="_hrc_int_N10175-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10175-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(stylesheet-prefix)\M([\s\=]|$)/x" scheme="prefix-default-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(result-prefix)\M([\s\=]|$)/x" scheme="prefix-default-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10175-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10175-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10175-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: template
-->
<scheme name="_hrc_int_N10180-content">
<inherit scheme="param-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="instructions-group" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10180-content-error">
<inherit scheme="_hrc_int_N10180-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10180-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(match)\M([\s\=]|$)/x" scheme="pattern-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(priority)\M([\s\=]|$)/x" scheme="xmlschema:decimal-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(mode)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10180-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10180-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10180-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: value-of
-->
<scheme name="_hrc_int_N1019D-content"/>
<scheme name="_hrc_int_N1019D-content-error">
<inherit scheme="_hrc_int_N1019D-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N1019D-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(select)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(disable-output-escaping)\M([\s\=]|$)/x" scheme="yes-no-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1019D-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1019D-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1019D-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: copy-of
-->
<scheme name="_hrc_int_N101A8-content"/>
<scheme name="_hrc_int_N101A8-content-error">
<inherit scheme="_hrc_int_N101A8-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101A8-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(select)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N101A8-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101A8-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N101A8-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: number
-->
<scheme name="_hrc_int_N101AF-content"/>
<scheme name="_hrc_int_N101AF-content-error">
<inherit scheme="_hrc_int_N101AF-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101AF-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(level)\M([\s\=]|$)/x" scheme="_hrc_int_N101B3-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(count)\M([\s\=]|$)/x" scheme="pattern-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(from)\M([\s\=]|$)/x" scheme="pattern-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(value)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(format)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(lang)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(letter-value)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(grouping-separator)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(grouping-size)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N101AF-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101AF-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N101AF-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: level
-->
<scheme name="_hrc_int_N101B3-content">
<regexp region="Enumeration" match="/single/" xmlns="http://colorer.sf.net/2003/hrc"/>
<regexp region="Enumeration" match="/multiple/" xmlns="http://colorer.sf.net/2003/hrc"/>
<regexp region="Enumeration" match="/any/" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101B3-content-error">
<inherit scheme="_hrc_int_N101B3-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101B3-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N101B3-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N101B3-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: apply-templates
-->
<scheme name="_hrc_int_N101DE-content">
<inherit scheme="sort-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="with-param-element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101DE-content-error">
<inherit scheme="_hrc_int_N101DE-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101DE-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(select)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(mode)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N101DE-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101DE-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N101DE-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: apply-imports
-->
<scheme name="_hrc_int_N101EE-content"/>
<scheme name="_hrc_int_N101EE-content-error">
<inherit scheme="_hrc_int_N101EE-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101EE-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N101EE-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101EE-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N101EE-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: for-each
-->
<scheme name="_hrc_int_N101F1-content">
<inherit scheme="sort-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="instructions-group" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101F1-content-error">
<inherit scheme="_hrc_int_N101F1-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N101F1-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(select)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N101F1-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101F1-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N101F1-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: sort
-->
<scheme name="_hrc_int_N10202-content"/>
<scheme name="_hrc_int_N10202-content-error">
<inherit scheme="_hrc_int_N10202-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10202-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(select)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(lang)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(data-type)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(order)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(case-order)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10202-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10202-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10202-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="if-when-content">
<inherit scheme="templateType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="if-when-content-error">
<inherit scheme="if-when-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="if-when-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(test)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<inherit scheme="templateType-Attributes"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="if-when-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="if-when-content" scheme="xml:element"/>
<virtual subst-scheme="if-when-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: choose
-->
<scheme name="_hrc_int_N10226-content">
<inherit scheme="when-element" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="otherwise-element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10226-content-error">
<inherit scheme="_hrc_int_N10226-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10226-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10226-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10226-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10226-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: attribute-set
-->
<scheme name="_hrc_int_N10237-content">
<inherit scheme="attribute-element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10237-content-error">
<inherit scheme="_hrc_int_N10237-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10237-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(use-attribute-sets)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKENS-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10237-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10237-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10237-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: call-template
-->
<scheme name="_hrc_int_N10247-content">
<inherit scheme="with-param-element" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10247-content-error">
<inherit scheme="_hrc_int_N10247-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10247-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:QName-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10247-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10247-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10247-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: text
-->
<scheme name="_hrc_int_N1025C-content">
<inherit scheme="xmlschema:string-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N1025C-content-error">
<inherit scheme="_hrc_int_N1025C-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N1025C-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(disable-output-escaping)\M([\s\=]|$)/x" scheme="yes-no-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1025C-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1025C-content-error" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="_hrc_int_N1025C-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N1025C-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: processing-instruction
-->
<scheme name="_hrc_int_N10266-content">
<inherit scheme="char-template-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10266-content-error">
<inherit scheme="_hrc_int_N10266-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10266-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<inherit scheme="char-template-Attributes"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10266-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10266-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10266-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: element
-->
<scheme name="_hrc_int_N10271-content">
<inherit scheme="templateType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10271-content-error">
<inherit scheme="_hrc_int_N10271-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10271-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(namespace)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(use-attribute-sets)\M([\s\=]|$)/x" scheme="_hrc_int_N10281-AttributeContent"/>
<inherit scheme="templateType-Attributes"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10271-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10271-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10271-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: use-attribute-sets
-->
<scheme name="_hrc_int_N10281-content">
<!--list:-->
<inherit scheme="xmlschema:QName-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10281-content-error">
<inherit scheme="_hrc_int_N10281-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10281-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10281-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N10281-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: attribute
-->
<scheme name="_hrc_int_N10286-content">
<inherit scheme="char-template-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10286-content-error">
<inherit scheme="_hrc_int_N10286-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10286-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(namespace)\M([\s\=]|$)/x" scheme="avt-AttributeContent"/>
<inherit scheme="char-template-Attributes"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10286-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10286-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10286-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: copy
-->
<scheme name="_hrc_int_N10298-content">
<inherit scheme="templateType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10298-content-error">
<inherit scheme="_hrc_int_N10298-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N10298-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(use-attribute-sets)\M([\s\=]|$)/x" scheme="_hrc_int_N102A0-AttributeContent"/>
<inherit scheme="templateType-Attributes"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10298-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10298-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10298-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: use-attribute-sets
-->
<scheme name="_hrc_int_N102A0-content">
<!--list:-->
<inherit scheme="xmlschema:QName-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N102A0-content-error">
<inherit scheme="_hrc_int_N102A0-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N102A0-Attributes">
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N102A0-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N102A0-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: message
-->
<scheme name="_hrc_int_N102A5-content">
<inherit scheme="templateType-content" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N102A5-content-error">
<inherit scheme="_hrc_int_N102A5-content" xmlns="http://colorer.sf.net/2003/hrc"/>
<inherit scheme="xml:badChar" xmlns="http://colorer.sf.net/2003/hrc"/>
</scheme>
<scheme name="_hrc_int_N102A5-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(terminate)\M([\s\=]|$)/x" scheme="yes-no-AttributeContent"/>
<inherit scheme="templateType-Attributes"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N102A5-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N102A5-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N102A5-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>

<scheme name="xslt-root">
<inherit scheme="stylesheet-element"/>
<inherit scheme="transform-element"/>
<inherit scheme="top-levelGroup-group"/>
<inherit scheme="instructions-group"/>
</scheme>
<scheme name="xslt-root-addref">
<inherit scheme="xslt-root"/>
</scheme>
<scheme name="xslt">
<inherit scheme="xml:singleroot">
<virtual subst-scheme="xslt-root-addref" scheme="xml:element"/>
</inherit>
</scheme>
</type>
</hrc>
